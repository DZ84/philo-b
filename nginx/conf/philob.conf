# philob.conf 

upstream hello_server {
	# server localhost:8004 ;
	server pweb:8004 fail_timeout=0;
	# server localhost:8004 fail_timeout=0;
	# server unix:///overhead/gunicorn/gunicorn.sock fail_timeout=0;
}


server {
    listen 81;
    # listen 0.0.0.0:81;
    # listen 46.101.245.22:81; # this does not work
    # server_name ~^(.+)$;
    # server_name philo-b.xyz;

    # location = /favicon.ico { access_log off; log_not_found off; }
    # location = philo-b-docker/philo-b/static/images/favicon.ico { access_log off; log_not_found off; }

	# NOTE: seems this is for passing everything on the gunicorn
	# location /~^(.+) {
    location / {
    #     include proxy_params;
    #     proxy_pass http://unix:/srv/code/django_app/django_app.sock;
    
		
		# seems to me this has to be 80, not 8005, because it's in the
		# container.
	    proxy_pass http://hello_server;
        # proxy_pass http://localhost:8004;
        # proxy_pass http://192.168.32.1:8004;
        #proxy_pass http://0.0.0.0:8004;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;	
    }
	
	# TODO: don't know why and if there should be some regex in front of the
	# well-known suffix. Don't think it's needed.
	location ^~ /.well-known {
		root /data/letsencrypt/;
	#	default_type "text/plain";
		allow all;
	}


	# location /static/ {

	# 	# it may not know what root is
    #     # root philo-b-docker/static;
	# 	# alias /home/dennis/projects/coding/philo-b/philo-b/

	# 	# directory as specified in docker-compose for container
	# 	root /volume_static/;
    # }

	# location /media/ {

	# 	# it may not know what root is
    #     # root philo-b-docker/static;
	# 	# alias /home/dennis/projects/coding/philo-b/philo-b/

	# 	# directory as specified in docker-compose for container
	# 	root /volume_static/;
    # }
}











# user  nginx;
# worker_processes  1;
# 
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
# 
# events {
#   worker_connections  1024;  ## Default: 1024, increase if you have lots of clients
# }
# 
# http {
#   include       /etc/nginx/mime.types;
#   # fallback in case we can't determine a type
#   default_type  application/octet-stream;
# 
#   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#   '$status $body_bytes_sent "$http_referer" '
#   '"$http_user_agent" "$http_x_forwarded_for"';
# 
#   access_log  /var/log/nginx/access.log  main;
# 
#   sendfile        on;
#   #tcp_nopush     on;
# 
#   keepalive_timeout  65;
# 
#   upstream app {
#     server web:8000;
#   }
# 
#   server {
#     # use 'listen 80 deferred;' for Linux
#     # use 'listen 80 accept_filter=httpready;' for FreeBSD
#     listen 80;
#     charset utf-8;
#     
#     # Handle noisy favicon.ico messages in nginx
#      location = /favicon.ico {
#         return 204;
#         access_log     off;
#         log_not_found  off;
#     }
# 
#      location / {
#         # checks for static file, if not found proxy to app
#         try_files $uri @proxy_to_app;
#     }
# 
#     # django app
#      location @proxy_to_app {
#         proxy_redirect     off;
#         proxy_set_header   Host $host;
#         proxy_set_header   X-Real-IP $remote_addr;
#         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header   X-Forwarded-Host $server_name;
#         proxy_pass http://app;
#     }
#   }
# }
#
#
#
